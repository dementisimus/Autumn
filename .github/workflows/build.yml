name: build
on: [ push, workflow_dispatch ]

env:
  name: Autumn

jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]

    runs-on: ${{ matrix.platform }}
    name: ${{ matrix.platform }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup-jdk-21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ secrets.CACHE_KEY }}

      - name: evaluate project info
        run: echo "version=$(mvn org.apache.maven.plugins:maven-help-plugin:3.5.0:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: build paper-nms
        run: mvn paper-nms:init -file plugin/pom.xml

      - name: build
        run: mvn -U clean install

#      - name: pre-deploy
#        if: false
#        run: |
#          declare -a modules=("dependencies" "common-api" "common-plugin" "bukkit-api" "bukkit-plugin" "bungee-api" "bungee-plugin")
#          declare -a javadocModules=("common-api" "bukkit-api" "bungee-api")
#
#          fullModule=autumn-${{ env.version }}
#          package=dev/dementisimus/autumn/${{ env.version }}
#          artifactsTarget=./artifacts/$package
#
#          mkdir -p $artifactsTarget
#
#          cp ./pom.xml $artifactsTarget/$fullModule.pom
#
#          for module in "${modules[@]}"; do
#            fullModule=$module-${{ env.version }}
#            package=dev/dementisimus/$module/${{ env.version }}
#            artifactsTarget=./artifacts/$package
#
#            mkdir -p $artifactsTarget
#
#            cp ./$module/target/$fullModule.jar $artifactsTarget/
#            cp ./$module/pom.xml $artifactsTarget/$fullModule.pom
#          done
#
#          for module in "${javadocModules[@]}"; do
#            fullModule=$module-${{ env.version }}
#            package=dev/dementisimus/$module/${{ env.version }}
#            artifactsTarget=./artifacts/$package
#
#            mkdir -p $artifactsTarget
#
#            cp ./$module/target/$fullModule-sources.jar $artifactsTarget/
#          done
#
#          for module in "${javadocModules[@]}"; do
#            javadocsTarget=./javadocs/$module/${{ env.version }}
#
#            mkdir -p $javadocsTarget
#            cp -r ./$module/target/site/apidocs/. $javadocsTarget/
#          done
#
#      - name: deploy release artifacts
#        if: false && endsWith(github.ref, '/main')
#        uses: garygrossgarten/github-action-scp@v0.7.3
#        with:
#          local: ./artifacts/dev/dementisimus
#          remote: /home/repo-deployment/repository/repositories/release/dev/dementisimus/
#          concurrency: 10
#          host: ${{ secrets.SSH_HOST }}
#          port: ${{ secrets.SSH_PORT }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          privateKey: ${{ secrets.PRIVATE_KEY}}
#          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
#
#      - name: deploy development artifacts
#        if: false && endsWith(github.ref, '/develop')
#        uses: garygrossgarten/github-action-scp@v0.7.3
#        with:
#          local: ./artifacts/dev/dementisimus
#          remote: /home/repo-deployment/repository/repositories/development/dev/dementisimus/
#          concurrency: 10
#          host: ${{ secrets.SSH_HOST }}
#          port: ${{ secrets.SSH_PORT }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          privateKey: ${{ secrets.PRIVATE_KEY}}
#          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
#
#      - name: deploy release javadocs
#        if: false && endsWith(github.ref, '/main')
#        uses: garygrossgarten/github-action-scp@v0.7.3
#        with:
#          local: ./javadocs
#          remote: /var/www/dementisimus.dev/html/docs/release/${{ env.name }}/
#          concurrency: 10
#          host: ${{ secrets.SSH_HOST }}
#          port: ${{ secrets.SSH_PORT }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          privateKey: ${{ secrets.PRIVATE_KEY}}
#          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
#
#      - name: deploy development javadocs
#        if: false && endsWith(github.ref, '/develop')
#        uses: garygrossgarten/github-action-scp@v0.7.3
#        with:
#          local: ./javadocs
#          remote: /var/www/dementisimus.dev/html/docs/development/${{ env.name }}/
#          concurrency: 10
#          host: ${{ secrets.SSH_HOST }}
#          port: ${{ secrets.SSH_PORT }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          privateKey: ${{ secrets.PRIVATE_KEY}}
#          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
